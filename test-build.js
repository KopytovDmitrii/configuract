// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–±–æ—Ä–∫–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
const fs = require('fs');
const path = require('path');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
const buildFile = path.join(__dirname, 'dist', 'js-framework.iife.js');

if (fs.existsSync(buildFile)) {
  console.log('‚úÖ –§–∞–π–ª —Å–±–æ—Ä–∫–∏ –Ω–∞–π–¥–µ–Ω:', buildFile);
  
  const content = fs.readFileSync(buildFile, 'utf8');
  const size = (content.length / 1024).toFixed(2);
  console.log(`üì¶ –†–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏: ${size} KB`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
  const exports = [
    'JSFramework', 
    'HTMLRenderer', 
    'ConfigValidator',
    'createReactive',
    'computed'
  ];
  
  const missingExports = exports.filter(exp => !content.includes(exp));
  
  if (missingExports.length === 0) {
    console.log('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  } else {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–∫—Å–ø–æ—Ä—Ç—ã:', missingExports);
  }
  
  console.log('‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!');
} else {
  console.log('‚ùå –§–∞–π–ª —Å–±–æ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
}